# TODO 
# Apply openebs operator and openebs storage class

- hosts: localhost
  connection: local

  vars_files:
  - vars.yaml

  tasks:
    - block:
          - name: Add path to openebs storage pool
            replace:
              dest: sp.yaml
              regexp: '/mnt/openebs'
              replace: "{{ lookup('env','mountPath') }}"           

          - name: Applying openebs operator
            shell: \{{ kubeapply }} apply -f {{ openebsOperatorLink }} 
            args:
              executable: /bin/bash

          - name: Applying openebs storagepool 
            shell: \{{ kubeapply }} apply -f {{ openebsStoragePoolLink }} 
            args:
              executable: /bin/bash

          - name: Applying openebs storageclass 
            shell: \{{ kubeapply }} apply -f {{ openebsStorageClassLink }} 
            args:
              executable: /bin/bash
    
          - name: Checking Maya-API-Server is running
            shell: kubectl get pods -n {{ namespace }} -o jsonpath='{.items[?(@.metadata.labels.name=="maya-apiserver")].status.phase}'
            register: maya_api
            until: "'Running' in maya_api.stdout"
            delay: 30
            retries: 100

          - name: Checking OpenEBS-provisioner is running
            shell: kubectl get pods -n {{ namespace }} -o jsonpath='{.items[?(@.metadata.labels.name=="openebs-provisioner")].status.phase}'
            register: openebs_prob
            until: "'Running' in openebs_prob.stdout"
            delay: 30
            retries: 100

          - name: Get maya-apiserver pod name
            shell: kubectl get pods -n {{ namespace }} --selector=name=maya-apiserver
            args:
              executable: /bin/bash
            register: result_name

          - name: Create fact for pod name
            set_fact: 
              pod_name: "{{ result_name.stdout_lines[1].split()[0] }}"

          - name: Checking OpenEBS-Snapshot-Operator is running
            shell: kubectl get pods -n {{ namespace }} -o jsonpath='{.items[?(@.metadata.labels.name=="openebs-snapshot-operator")].status.phase}'
            register: oso
            until: "'Running' in oso.stdout"
            delay: 30
            retries: 100

          - name: Confirm that maya-cli is available in the maya-apiserver pod
            shell: kubectl exec {{pod_name}} -c maya-apiserver -n {{ namespace }} -- mayactl version
            args:
              executable: /bin/bash
            register: result_vers
            failed_when: "'m-apiserver status:  running' not in result_vers.stdout"

          - name: Confirm that openebs storage pools are created
            shell: kubectl get sp
            args:
              executable: /bin/bash
            register: result_sp
            until: "'openebs-mntdir' in result_sp.stdout"
            delay: 30 
            retries: 100

          - name: Confirm that openebs storage classes are created
            shell: kubectl get sc
            args:
              executable: /bin/bash
            register: result_sc
            until: "'openebs-storageclass' in result_sc.stdout"
            delay: 30 
            retries: 100
          
          - set_fact:
              flag: "Pass"
      rescue: 
        - set_fact: 
            flag: "Fail"
