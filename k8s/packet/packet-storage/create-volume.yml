# create-volume.yml
########################################################################################################################################################################
#Steps:

#1. Creating volume in packet cloud
#2. Creating a file for store volume ID
#3. Getting cluster device ID from file
#4. Attaching volume to devide in packet
########################################################################################################################################################################

---
- hosts: localhost

  vars:
    packet_api_token: "{{ packet_api }}"
  
  vars_files:
    - vars.yml

  tasks:
    - block:
        - name: Create a volume in packet cloud
          uri:
            url: "{{ base_url }}/projects/{{ project_id }}/storage"
            method: POST
            headers:
              X-Auth-Token: "{{ packet_api }}"
            body: '{
              "plan": "{{ performance_tier }}",
              "facility": "{{ location }}",
              "billing_cycle": "{{ billing_cycle }}",
              "size": "{{ size }}"
              }'
            status_code: 201
            body_format: json
          register: volume_id
          with_lines: cat "{{ device_id_location }}"

        - name: Create a file for store volume Ids
          lineinfile:
            create: yes
            state: present
            path: "/tmp/packet/volume_id"
            line: "{{ item.json.id }}"
            mode: 0755
          with_items: "{{ volume_id.results }}"

        - name: get the Device ID from file
          command: cat "{{ device_id_location }}"
          register: device_id

        - name: Attach volume to device
          uri:
            url: "{{ base_url }}/storage/{{ item.0.json.id }}/attachments"
            method: POST
            headers:
              X-Auth-Token: "{{ packet_api }}"
            body: '{
              "device_id": "{{ item.1 }}"
              }'
            status_code: 201
            body_format: json
          with_together:
             - "{{ volume_id.results }}"
             - "{{ device_id.stdout_lines }}"

        - name: Test Passed
          set_fact:
            flag: "Test Passed"

    - rescue:
        - name: Test Failed
          set_fact:
            flag: "Test Failed"

